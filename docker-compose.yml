version: '3.8'

services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - "7072:7072"
    container_name: Api
    environment:
    - DOTNET_APPSETTINGS_FILE=/app/appsettings.json
    - ASPNETCORE_ENVIRONMENT=Docker
    volumes:
      - ./Api/appsettings.Docker.json:/app/appsettings.json:ro
      - ./Api/Persistance:/app/Persistance
    depends_on:
      - redis
      - elasticsearch
      - kibana
    networks:
    - elastic

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
    - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
    - elastic
    ports:
      - "5601:5601"
networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:

